package com.github.kiarahmani.replayer;

import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

import com.github.adejanovski.cassandra.jdbc.CassandraConnection;

public class Client {
	private Connection connect = null;
	private Statement stmt = null;
	private ResultSet rs = null;
	private int id;
	Properties p;

	public Client(int id) {
		this.id = id;
		p = new Properties();
		p.setProperty("id", String.valueOf(this.id));
		Object o;
		try {
			o = Class.forName("MyDriver").newInstance();
			DriverManager.registerDriver((Driver) o);
			Driver driver = DriverManager.getDriver("jdbc:mydriver://");
			connect = driver.connect("", p);
		} catch (InstantiationException | IllegalAccessException | ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		}
	}

	private void close() {
		try {
			connect.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public void addFriendship_c1(long profile_id1, long profile_id2) throws SQLException {
		String stmtstring = "INSERT INTO FRIENDS_BY_PROFILE (profile_id, friend_id)" +
			" VALUES (?, ?);";
		PreparedStatement stmt = connect.prepareStatement(stmtstring);
		stmt.setLong(1, profile_id1);
		stmt.setLong(2, profile_id2);
		stmt.executeUpdate();

		String stmtstring2 = "INSERT INTO FRIENDS_BY_PROFILE (profile_id, friend_id)" +
			" VALUES (?, ?);";
		PreparedStatement stmt2 = connect.prepareStatement(stmtstring2);
		stmt2.setLong(1, profile_id2);
		stmt2.setLong(2, profile_id1);
		stmt2.executeUpdate();
	}

	public void removeFriendship_c1(long profile_id1, long profile_id2) throws SQLException {
		String stmtstring = "DELETE FROM FRIENDS_BY_PROFILE WHERE profile_id = ? AND friend_id = ?;";
		PreparedStatement stmt = connect.prepareStatement(stmtstring);
		stmt.setLong(1, profile_id1);
		stmt.setLong(2, profile_id2);
		stmt.executeUpdate();

		String stmtstring2 = "DELETE FROM FRIENDS_BY_PROFILE WHERE profile_id = ? AND friend_id = ?;";
		PreparedStatement stmt2 = connect.prepareStatement(stmtstring2);
		stmt2.setLong(1, profile_id2);
		stmt2.setLong(2, profile_id1);
		stmt2.executeUpdate();
	}

	public void listFriendships_c1(long profile_id) throws SQLException {
		String stmtString = "SELECT friend_id FROM FRIENDS_BY_PROFILE WHERE profile_id = ?;";
		PreparedStatement stmt = connect.prepareStatement(stmtString);
		stmt.setLong(1, profile_id);
		ResultSet rs = stmt.executeQuery();
		int readID;
		while (rs.next() != false) {
			readID = rs.getInt("FRIEND_ID");
			System.out.println("Friend with ID = " + readID);
		}
	}

	public void createPost_c1(long profile_id) throws SQLException {
		String stmtstring = "INSERT INTO POSTS_BY_PROFILE (profile_id, post_id) VALUES (?, ?, ?);";
		PreparedStatement stmt = connect.prepareStatement(stmtstring);
		stmt.setLong(1, profile_id);
		long postid = ThreadLocalRandom.current().nextLong(1, 99999);
		stmt.setLong(2, postid);
		stmt.setString(3, "olaola");
		stmt.executeUpdate();
		createPost_c2(profile_id, postid);
	}

	public void createPost_c2(long profile_id, long post_id) throws SQLException {
		String stmtstring = "UPDATE POSTS_BY_PROFILE SET text = ? WHERE profile_id = ? AND post_id = ?;";
		PreparedStatement stmt = connect.prepareStatement(stmtstring);
		stmt.setString(1, "olaola");
		stmt.setLong(2, profile_id);
		stmt.setLong(3, post_id);
		stmt.executeUpdate();
	}

	//c1 gets all posts that profile_id published, and triggers getPosts_c2 to read the text from those posts
	public void getPosts_c1(long profile_id) throws SQLException {
		String stmtstring = "SELECT post_id FROM POSTS_BY_PROFILE WHERE profile_id = ?;";
		PreparedStatement stmt = connect.prepareStatement(stmtstring);
		stmt.setLong(1, profile_id);
		ResultSet rs = stmt.executeQuery();
		long readID;
		while (rs.next() != false) {
			readID = rs.getLong("POST_ID");
			getPosts_c2(readID, profile_id);
			System.out.println("post_id = " + readID);
		}
	}

	public void getPosts_c2(long post_id, long profile_id) throws SQLException {
		String stmtstring = "SELECT text FROM POSTS_BY_PROFILE WHERE profile_id = ? AND post_id = ?;";
		PreparedStatement stmt = connect.prepareStatement(stmtstring);
		stmt.setLong(1, profile_id);
		stmt.setLong(2, post_id);
		ResultSet rs = stmt.executeQuery();
		String readText;
		long readID;
		while (rs.next() != false) {
			readText = rs.getString("TEXT");
			readID = rs.getLong("POST_ID");
			System.out.println(readText + "with ID = " + readID);
		}
	}
}