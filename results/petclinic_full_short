
     [java] ------------------------------------------------------
     [java]  			     Schema
     [java] ------------------------------------------------------
     [java] ##owners## <<id:INT>> <first_name:STRING> <last_name:STRING> <address:STRING> <city:STRING> <telephone:STRING>
     [java] ##pets## <<id:INT>> <name:STRING> <birth_date:STRING> <type_id:INT> <owner_id:INT>
     [java] ##types## <<id:INT>> <name:STRING>
     [java] ##specialties## <<id:INT>> <name:STRING>
     [java] ##vets## <<id:INT>> <first_name:STRING> <last_name:STRING>
     [java] ##vet_specialties## <<vet_id:INT>> <<specialty_id:INT>>
     [java] ##visits## <<id:INT>> <date:STRING> <description:STRING> <pet_id:INT>
     [java] ------------------------------------------------------
     [java]  			Compiled Application
     [java] ------------------------------------------------------
     [java] TXN_ownerProcessCreationForm_0
     [java]  ++ ownerProcessCreationForm_0-insert#1#1 (INSERT[owners] [i0_param, r1_param, r2_param, r3_param, r4_param, r5_param])
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerProcessCreationForm
     [java] Microservice: M1
     [java] ----------------------------------------------------------------
     [java] TXN_ownerProcessFindForm_0
     [java]  ++ ownerProcessFindForm_0-select#1#1 (SELECT[owners:[id, first_name, last_name, address, city, telephone]]  <<(EQ owners.last_name,r1_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerProcessFindForm
     [java] Microservice: M1
     [java] ----------------------------------------------------------------
     [java] TXN_ownerProcessFindForm_1
     [java]  ++ ownerProcessFindForm_1-select#1#1 (SELECT[pets:[id, name, birth_date, type_id, owner_id]]  <<(EQ pets.owner_id,(ROW:owners-r7-loopVar1).id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: owners WHERE: (EQ owners.last_name,r1_param)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerProcessFindForm
     [java] Microservice: M2
     [java] ----------------------------------------------------------------
     [java] TXN_ownerProcessFindForm_2
     [java]  ++ ownerProcessFindForm_2-select#1#1 (SELECT[visits:[id, date, description, pet_id]]  <<(EQ visits.pet_id,(ROW:pets-r9-loopVar1).id)>>)
     [java]     [PATH CONDITION: (AND (AND (AND (AND true,(NOT (EQ NULL[ROW SET: owners WHERE: (EQ owners.last_name,r1_param)],0))),(NOT (EQ NULL[ROW SET: pets WHERE: (EQ pets.owner_id,(ROW:owners-r7-loopVar1).id)],0))),(NOT (EQ NULL[null],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerProcessFindForm
     [java] Microservice: M6
     [java] ----------------------------------------------------------------
     [java] TXN_ownerProcessFindForm_3
     [java]  ++ ownerProcessFindForm_3-select#1#1 (SELECT[types:[id, name]]  <<(EQ 1,1)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: owners WHERE: (EQ owners.last_name,r1_param)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerProcessFindForm
     [java] Microservice: M3
     [java] ----------------------------------------------------------------
     [java] TXN_ownerInitUpdateOwnerForm_0
     [java]  ++ ownerInitUpdateOwnerForm_0-select#1#1 (SELECT[owners:[id, first_name, last_name, address, city, telephone]]  <<(EQ owners.id,i0_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerInitUpdateOwnerForm
     [java] Microservice: M1
     [java] ----------------------------------------------------------------
     [java] TXN_ownerInitUpdateOwnerForm_1
     [java]  ++ ownerInitUpdateOwnerForm_1-select#1#1 (SELECT[pets:[id, name, birth_date, type_id, owner_id]]  <<(EQ pets.owner_id,i0_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerInitUpdateOwnerForm
     [java] Microservice: M2
     [java] ----------------------------------------------------------------
     [java] TXN_ownerInitUpdateOwnerForm_2
     [java]  ++ ownerInitUpdateOwnerForm_2-select#1#1 (SELECT[visits:[id, date, description, pet_id]]  <<(EQ visits.pet_id,(ROW:pets-r8-loopVar0).id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: pets WHERE: (EQ pets.owner_id,i0_param)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerInitUpdateOwnerForm
     [java] Microservice: M6
     [java] ----------------------------------------------------------------
     [java] TXN_ownerInitUpdateOwnerForm_3
     [java]  ++ ownerInitUpdateOwnerForm_3-select#1#1 (SELECT[types:[id, name]]  <<(EQ 1,1)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerInitUpdateOwnerForm
     [java] Microservice: M3
     [java] ----------------------------------------------------------------
     [java] TXN_ownerProcessUpdateOwnerForm_0
     [java]  ++ ownerProcessUpdateOwnerForm_0-update#1#1 (UPDATE[owners] {id=i0_param} <<(EQ owners.id,i1_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerProcessUpdateOwnerForm
     [java] Microservice: M1
     [java] ----------------------------------------------------------------
     [java] TXN_ownerShowOwner_0
     [java]  ++ ownerShowOwner_0-select#1#1 (SELECT[owners:[id, first_name, last_name, address, city, telephone]]  <<(EQ owners.id,i0_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerShowOwner
     [java] Microservice: M1
     [java] ----------------------------------------------------------------
     [java] TXN_ownerShowOwner_1
     [java]  ++ ownerShowOwner_1-select#1#1 (SELECT[pets:[id, name, birth_date, type_id, owner_id]]  <<(EQ pets.owner_id,i0_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerShowOwner
     [java] Microservice: M2
     [java] ----------------------------------------------------------------
     [java] TXN_ownerShowOwner_2
     [java]  ++ ownerShowOwner_2-select#1#1 (SELECT[visits:[id, date, description, pet_id]]  <<(EQ visits.pet_id,(ROW:pets-r8-loopVar0).id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: pets WHERE: (EQ pets.owner_id,i0_param)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerShowOwner
     [java] Microservice: M6
     [java] ----------------------------------------------------------------
     [java] TXN_ownerShowOwner_3
     [java]  ++ ownerShowOwner_3-select#1#1 (SELECT[types:[id, name]]  <<(EQ 1,1)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: ownerShowOwner
     [java] Microservice: M3
     [java] ----------------------------------------------------------------
     [java] TXN_petInitCreationForm_0
     [java]  ++ petInitCreationForm_0-insert#1#1 (INSERT[pets] [i0_param, , , -1, -1])
     [java]     [PATH CONDITION: true]
     [java]  ++ petInitCreationForm_0-update#1#2 (UPDATE[pets] {owner_id=i1_param} <<(EQ pets.id,?)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: petInitCreationForm
     [java] Microservice: M2
     [java] ----------------------------------------------------------------
     [java] TXN_petProcessCreationForm_0
     [java]  ++ petProcessCreationForm_0-select#1#1 (SELECT[pets:[id]]  <<(EQ pets.name,r1_param)>>)
     [java]     [PATH CONDITION: true]
     [java]  ++ petProcessCreationForm_0-insert#1#2 (INSERT[pets] [i0_param, r1_param, r2_param, i1_param, i2_param])
     [java]     [PATH CONDITION: (AND true,(NOT (NOT (EQ i3_param,1))))]
     [java]  ++ petProcessCreationForm_0-update#1#3 (UPDATE[pets] {birth_date=r2_param, type_id=i1_param, name=r1_param, owner_id=i2_param} <<(EQ pets.id,i0_param)>>)
     [java]     [PATH CONDITION: (AND true,(NOT (EQ i3_param,1)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: petProcessCreationForm
     [java] Microservice: M2
     [java] ----------------------------------------------------------------
     [java] TXN_petInitUpdateForm_0
     [java]  ++ petInitUpdateForm_0-select#1#1 (SELECT[pets:[id, name, birth_date, type_id, owner_id]]  <<(EQ pets.id,i0_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: petInitUpdateForm
     [java] Microservice: M2
     [java] ----------------------------------------------------------------
     [java] TXN_petProcessUpdateForm_0
     [java]  ++ petProcessUpdateForm_0-update#1#1 (UPDATE[pets] {owner_id=i0_param} <<(EQ pets.id,i1_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: petProcessUpdateForm
     [java] Microservice: M2
     [java] ----------------------------------------------------------------
     [java] TXN_vetShowVetList_0
     [java]  ++ vetShowVetList_0-select#1#1 (SELECT[vets:[id, first_name, last_name]]  <<(EQ 1,1)>>)
     [java]     [PATH CONDITION: true]
     [java]  ++ vetShowVetList_0-select#2#2 (SELECT[vet_specialties:[specialty_id]]  <<(EQ vet_specialties.vet_id,(ROW:vets-r5-loopVar0).id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: vets WHERE: (EQ 1,1)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: vetShowVetList
     [java] Microservice: M5
     [java] ----------------------------------------------------------------
     [java] TXN_vetShowVetList_1
     [java]  ++ vetShowVetList_1-select#1#1 (SELECT[specialties:[id, name]]  <<(EQ specialties.id,(ROW:vet_specialties-r7-loopVar0).specialty_id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: vets WHERE: (EQ 1,1)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: vetShowVetList
     [java] Microservice: M4
     [java] ----------------------------------------------------------------
     [java] TXN_vetShowJsonVetList_0
     [java]  ++ vetShowJsonVetList_0-select#1#1 (SELECT[vets:[id, first_name, last_name]]  <<(EQ 1,1)>>)
     [java]     [PATH CONDITION: true]
     [java]  ++ vetShowJsonVetList_0-select#2#2 (SELECT[vet_specialties:[specialty_id]]  <<(EQ vet_specialties.vet_id,(ROW:vets-r5-loopVar0).id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: vets WHERE: (EQ 1,1)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: vetShowJsonVetList
     [java] Microservice: M5
     [java] ----------------------------------------------------------------
     [java] TXN_vetShowJsonVetList_1
     [java]  ++ vetShowJsonVetList_1-select#1#1 (SELECT[specialties:[id, name]]  <<(EQ specialties.id,(ROW:vet_specialties-r7-loopVar0).specialty_id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: vets WHERE: (EQ 1,1)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: vetShowJsonVetList
     [java] Microservice: M4
     [java] ----------------------------------------------------------------
     [java] TXN_vetShowXmlVetList_0
     [java]  ++ vetShowXmlVetList_0-select#1#1 (SELECT[vets:[id, first_name, last_name]]  <<(EQ 1,1)>>)
     [java]     [PATH CONDITION: true]
     [java]  ++ vetShowXmlVetList_0-select#2#2 (SELECT[vet_specialties:[specialty_id]]  <<(EQ vet_specialties.vet_id,(ROW:vets-r5-loopVar0).id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: vets WHERE: (EQ 1,1)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: vetShowXmlVetList
     [java] Microservice: M5
     [java] ----------------------------------------------------------------
     [java] TXN_vetShowXmlVetList_1
     [java]  ++ vetShowXmlVetList_1-select#1#1 (SELECT[specialties:[id, name]]  <<(EQ specialties.id,(ROW:vet_specialties-r7-loopVar0).specialty_id)>>)
     [java]     [PATH CONDITION: (AND (AND true,(NOT (EQ NULL[ROW SET: vets WHERE: (EQ 1,1)],0))),(NOT (EQ NULL[null],0)))]
     [java] Dependencies: <empty>
     [java] Original Transaction: vetShowXmlVetList
     [java] Microservice: M4
     [java] ----------------------------------------------------------------
     [java] TXN_visitProcessNewVisitForm_0
     [java]  ++ visitProcessNewVisitForm_0-insert#1#1 (INSERT[visits] [i0_param, r1_param, r2_param, i1_param])
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: visitProcessNewVisitForm
     [java] Microservice: M6
     [java] ----------------------------------------------------------------
     [java] TXN_visitShowVisits_0
     [java]  ++ visitShowVisits_0-select#1#1 (SELECT[pets:[id, name, birth_date, type_id, owner_id]]  <<(EQ pets.id,i0_param)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: visitShowVisits
     [java] Microservice: M2
     [java] ----------------------------------------------------------------
     [java] TXN_visitShowVisits_1
     [java]  ++ visitShowVisits_1-select#1#1 (SELECT[visits:[id, date, description, pet_id]]  <<(EQ visits.pet_id,(ROW:pets-r4-next1).id)>>)
     [java]     [PATH CONDITION: true]
     [java] Dependencies: <empty>
     [java] Original Transaction: visitShowVisits
     [java] Microservice: M6
     [java] ----------------------------------------------------------------
     [java] ===========================================
     [java] === AR compile time:	214ms
     [java] -------------------------------------------
     [java] +++ Dirty Reads found:		0
     [java] +++ Dirty Writes found:		0
     [java] +++ Lost Updates found:		0
     [java] +++ Lost Updates/Write Skews found:	0
     [java] +++ Non-Repeatable Reads found:	0
     [java] +++ Phantom Reads found:		0
     [java] +++ Read Skews found:		0
     [java] +++ Multi anomalies found:		0
     [java] +++ Extensions found:		0
     [java] -------------------------------------------
     [java] === Total anomalies found:	0
     [java] === Analysis time:		146325 ms

BUILD SUCCESSFUL
Total time: 2 minutes 29 seconds
